{"openapi": "3.0.2", "info": {"title": "Object Detection FastAPI Template", "description": "Obtain object value out of image\n                    and return image and json result", "version": "2024.5.01"}, "paths": {"/analise/{exam_type}/result_full": {"post": {"tags": ["Analise"], "summary": "Retorna dados da an\u00e1lise, interpreta\u00e7\u00e3o cl\u00ednica e imagem com as detec\u00e7\u00f5es.", "description": "Object Detection, Clinical Interpretation and Annotated Image for multiple files.\n\nArgs:\n    exam_type (str): The type of exam being analyzed (ex: \"ecg_signal\").\n    files (List[UploadFile]): List of image files in bytes format.\n\nReturns:\n    list: List of JSON objects containing the Objects Detections, Clinical Interpretation, and Annotated Image for each file.", "operationId": "complete_analysis_analise__exam_type__result_full_post", "parameters": [{"required": true, "schema": {"title": "Exam Type", "type": "string"}, "name": "exam_type", "in": "path"}], "requestBody": {"content": {"multipart/form-data": {"schema": {"$ref": "#/components/schemas/Body_complete_analysis_analise__exam_type__result_full_post"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/analise/{exam_type}/result_object": {"post": {"tags": ["Analise"], "summary": "Retorna os dados da an\u00e1lise", "description": "Object Detection from multiple images.\n\nArgs:\n    exam_type (str): The type of exam being analyzed (ex: \"ecg_signal\").\n    files (List[UploadFile]): List of image files in bytes format.\n\nReturns:\n    list: List of JSON objects containing the Objects Detections for each file.", "operationId": "img_object_detection_to_json_analise__exam_type__result_object_post", "parameters": [{"required": true, "schema": {"title": "Exam Type", "type": "string"}, "name": "exam_type", "in": "path"}], "requestBody": {"content": {"multipart/form-data": {"schema": {"$ref": "#/components/schemas/Body_img_object_detection_to_json_analise__exam_type__result_object_post"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/analise/{exam_type}/result_img": {"post": {"tags": ["Analise"], "summary": "Gera uma imagem com objetos detectados anotados.", "description": "Object Detection from multiple images and plot bbox on images.\n\nArgs:\n    exam_type (str): The type of exam being analyzed (ex: \"ecg_signal\").\n    files (List[UploadFile]): List of image files in bytes format.\n\nReturns:\n    list: List of images in bytes with bbox annotations.", "operationId": "img_object_detection_to_img_analise__exam_type__result_img_post", "parameters": [{"required": true, "schema": {"title": "Exam Type", "type": "string"}, "name": "exam_type", "in": "path"}], "requestBody": {"content": {"multipart/form-data": {"schema": {"$ref": "#/components/schemas/Body_img_object_detection_to_img_analise__exam_type__result_img_post"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/health": {"get": {"tags": ["Healthcheck"], "summary": "Health Check Endpoint", "description": "Perform a health check of the application.\n\nThis endpoint checks various components of the application, such as database connectivity and other services,\nto ensure that everything is running smoothly.\n\nReturns:\n    A JSON response indicating the status of the application.", "operationId": "health_check_health_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/chat": {"post": {"tags": ["Chat Genius"], "summary": "Converse com Genius", "description": "Recebe um prompt de texto e retorna uma resposta do modelo GPT-4 Turbo.\n\nArgs:\n    detection_results (dict): JSON object containing detection results.\n\nReturns:\n    dict: Resposta do ChatGPT em formato JSON.", "operationId": "chat_with_gpt_chat_post", "requestBody": {"content": {"application/json": {"schema": {"title": "Detection Results", "type": "object"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}}, "components": {"schemas": {"Body_complete_analysis_analise__exam_type__result_full_post": {"title": "Body_complete_analysis_analise__exam_type__result_full_post", "required": ["files"], "type": "object", "properties": {"files": {"title": "Files", "type": "array", "items": {"type": "string", "format": "binary"}}}}, "Body_img_object_detection_to_img_analise__exam_type__result_img_post": {"title": "Body_img_object_detection_to_img_analise__exam_type__result_img_post", "required": ["files"], "type": "object", "properties": {"files": {"title": "Files", "type": "array", "items": {"type": "string", "format": "binary"}}}}, "Body_img_object_detection_to_json_analise__exam_type__result_object_post": {"title": "Body_img_object_detection_to_json_analise__exam_type__result_object_post", "required": ["files"], "type": "object", "properties": {"files": {"title": "Files", "type": "array", "items": {"type": "string", "format": "binary"}}}}, "HTTPValidationError": {"title": "HTTPValidationError", "type": "object", "properties": {"detail": {"title": "Detail", "type": "array", "items": {"$ref": "#/components/schemas/ValidationError"}}}}, "ValidationError": {"title": "ValidationError", "required": ["loc", "msg", "type"], "type": "object", "properties": {"loc": {"title": "Location", "type": "array", "items": {"anyOf": [{"type": "string"}, {"type": "integer"}]}}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}}}}}